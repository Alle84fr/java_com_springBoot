Continuando a implementação

___________________________________________ cod FilterTaskAuth - antes decode


package br.com.afr8799.todolist.filter;

import java.io.IOException;

import org.springframework.stereotype.Component;
import org.springframework.web.filter.OncePerRequestFilter;

import jakarta.servlet.FilterChain;
import jakarta.servlet.ServletException;
import jakarta.servlet.http.HttpServletRequest;
import jakarta.servlet.http.HttpServletResponse;



// ao invéz de usar implemntes filter - usaremos um que já tem no spring
// selecionar nome do File, ctrl . e enter no add unimpl....
// extends OncePerRequestFilter - converte direto para httpsrvelt
@Component
public class FilterTaskAuth extends OncePerRequestFilter{

    @Override
    protected void doFilterInternal(HttpServletRequest request, HttpServletResponse response, FilterChain filterChain)
            throws ServletException, IOException {

                //pegar autentificação - senha e usuário
                // facilita colocando autentificação do usuário e senha
                
                var autoriza = request.getHeader("Authorization");
                // cuiado com a escrita -  estava Authhorization, e no ´println estava Authoriza - dá erro - o retorno verio null no basic. 
                // Ao corrigir o valor basic apareceu no terminal

                // basic está em 64 - precisa decodar o 64,  não iremos precisar do basic
                // substring = tira parte do texto
                // irá pegar apenas a segunda parte
                // 1° de onde quer pegar
                // 2° lenghth == len do python - PEGAR TAMANHO
                // 3° .trim = REMOVER TODOS OS ESPAÇOS EM BRANCO
                // ex |Basic QWxlOmFiYWNhdGU= ficaria , 
                // sem trim | QWxlOmFiYWNhdGU=
                // com trim |QWxlOmFiYWNhdGU=
                // tipo o .sprit() no python
                // subtring(in-inicial, int-final)
                // ou subtring(int-único) 
                
                var user_password = autoriza.substring("Basic".length()).trim();

                //antes do decoder - parece que terá alterações então irei regiostrar esta parte
            
                // dei um sout - um SOUT
                System.out.println("Authorization");
                System.out.println(autoriza);
                System.out.println(user_password);
                
                // rodou apenas esta parte no apidog e deu 200 com retorno,
                // "id": "0352a54f-6a19-4ad6-9951-b8246fec3f0b",
                // "idUsuario": "293de3e5-c29e-43b8-9464-4838d1b4540c",
                // com user_password o retorno foi
                // Authorization
                // Basic QWxlOmFiYWNhdGU=
                // QWxlOmFiYWNhdGU=

            }
}


___________________________________________ cod FilterTaskAuth - pós decode


import java.io.IOException;
import java.util.Base64;

import org.springframework.stereotype.Component;
import org.springframework.web.filter.OncePerRequestFilter;

import jakarta.servlet.FilterChain;
import jakarta.servlet.ServletException;
import jakarta.servlet.http.HttpServletRequest;
import jakarta.servlet.http.HttpServletResponse;


@Component
public class FilterTaskAuth extends OncePerRequestFilter{

    @Override
    protected void doFilterInternal(HttpServletRequest request, HttpServletResponse response, FilterChain filterChain)
            throws ServletException, IOException {

                
                var autoriza = request.getHeader("Authorization");
                   
                //antes era user_password
                var authDecoded = autoriza.substring("Basic".length()).trim();

                //decoder
                // este comando gerará um decode, criadno array de bytes- array[]
                byte[] autoDecode = Base64.getDecoder().decode(authDecoded);
            
                //o restorno é assim [B@4bd91d42 - para entendermos o que é, transformar em string
                var convetStr = new String(autoDecode);

                // antes era pass_word
                System.out.println(autoDecode);
                System.out.println(convetStr);
                
                // retorno
                // Authorization
                // Basic QWxlOmFiYWNhdGU=
                // [B@4bd91d42

                // retorno com con string
                // Authorization
                // Basic QWxlOmFiYWNhdGU=
                // [B@6662a5a7
                // Ale:abacate

                //dividir o string em arrays, tendo base o :
                // usa split(), da mesma forma que no .py
                // String[] = converte em array a string
                // credencials = nome da variável
                // credencial[0} pega no índice zero, 1° elemento
                String[] credencials = convetStr.split(":");
                String username = credencials[0];
                String password = credencials[1];

                // dei um sout - um SOUT
                //desceu com esta parte
                System.out.println("Authorization");
                System.out.println(username);
                System.out.println(password);

                //retorno
                // [B@5e1191f4
                // Ale:abacate
                // Authorization
                // Ale
                // abacate

            }
}
